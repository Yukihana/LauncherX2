// Generated by .NET Reflector from D:\Projects\_labs\LauncherX.exe
namespace TrayMenuMini2
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Drawing;
    using System.IO;
    using System.Runtime.InteropServices;
    using System.Windows.Forms;
    
    public class Form1 : Form
    {
        private NotifyIcon cNotif;
        private Panel panel1;
        private Panel xTitlebarGroup;
        private Panel panel2;
        private Panel panel4;
        private Panel panel3;
        private ListBox xMainlist;
        private Panel panel6;
        private LinkLabel zLink;
        private Label label1;
        private Label xTitlebar;
        private Button xMinimize;
        private PictureBox yLaunch;
        private PictureBox yUp;
        private PictureBox yDown;
        private PictureBox yBottom;
        private PictureBox yTop;
        private PictureBox yRefresh;
        private Panel panel7;
        private PictureBox pictureBox9;
        private Panel panel9;
        private Panel panel8;
        private TextBox wCategory;
        private Label label6;
        private TextBox wName;
        private Label label4;
        private TableLayoutPanel tableLayoutPanel1;
        private Panel panel13;
        private Panel panel14;
        private TableLayoutPanel tableLayoutPanel2;
        private Label label3;
        private Label label5;
        private Panel panel11;
        private TextBox wPath;
        private PictureBox wBrowse;
        private Panel panel12;
        private Panel panel10;
        private PictureBox wSave;
        private PictureBox wRemove;
        private PictureBox wAdd;
        private Panel panel15;
        private TextBox wArgs;
        private PictureBox xLogo;
        private ContextMenuStrip cSys;
        private ToolStripMenuItem mHide;
        private ToolStripSeparator toolStripSeparator1;
        private ToolStripMenuItem mExit;
        private Timer timer1;
        private ContextMenuStrip cMenu;
        private IContainer components;
        private bool mover;
        private bool listchanged;
        private bool exittor;
        private Point movepoint;
        private List<string> iPathList;
        private List<string> Invalidated;
        
        public Form1()
        {
            try
            {
                this.InitializeComponent();
            }
            fault
            {
                base.Dispose(true);
            }
        }
        
        private void ~Form1()
        {
            this.cNotif.Visible = false;
            if (this.components != null)
            {
                IDisposable components = this.components;
                if (components != null)
                {
                    components.Dispose();
                }
            }
        }
        
        private void AddExit()
        {
        }
        
        private void AddHide()
        {
        }
        
        private void AddMenuItem(string iName, string iPath, int iPos)
        {
            ToolStripMenuItem item = null;
            item = new ToolStripMenuItem(iName) {
                Tag = iPos,
                Image = new Bitmap(Icon.ExtractAssociatedIcon(iPath).ToBitmap())
            };
            item.Click += new EventHandler(this.MenuItem_Click);
            this.cMenu.Items.Add(item);
        }
        
        private void AddPost()
        {
            ToolStripMenuItem item = null;
            ToolStripMenuItem item2 = null;
            ToolStripSeparator separator = null;
            separator = new ToolStripSeparator();
            item2 = new ToolStripMenuItem();
            item = new ToolStripMenuItem();
            item2.Text = "Show/Hide";
            item.Text = "Exit";
            item2.Click += new EventHandler(this.WinVisib);
            item.Click += new EventHandler(this.WinQuitter);
            this.cMenu.Items.Add(separator);
            this.cMenu.Items.Add(item2);
            this.cMenu.Items.Add(item);
        }
        
        private void AddShow()
        {
        }
        
        private void cNotif_MouseClick(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                byte num = base.Visible ? 0 : 1;
                base.Visible = (bool) num;
            }
        }
        
        private string ConfigPath() => 
            (Path.Combine(Application.StartupPath, Path.GetFileNameWithoutExtension(Application.ExecutablePath)) + ".ini");
        
        private void cSys_Opening(object sender, CancelEventArgs e)
        {
            if (this.mover)
            {
                e.Cancel = true;
            }
        }
        
        protected override void Dispose([MarshalAs(UnmanagedType.U1)] bool flag1)
        {
            if (!flag1)
            {
                base.Dispose(false);
            }
            else
            {
                try
                {
                    this.~Form1();
                }
                finally
                {
                    base.Dispose(true);
                }
            }
        }
        
        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (!this.exittor)
            {
                e.Cancel = true;
            }
            else
            {
                this.cNotif.Visible = false;
            }
            base.Hide();
        }
        
        private void Form1_Load(object sender, EventArgs e)
        {
            this.mover = false;
            this.listchanged = false;
            this.exittor = false;
            Point location = base.Location;
            this.movepoint = location;
            this.iPathList = new List<string>(0);
            this.Invalidated = new List<string>(0);
            this.DoubleBuffered = true;
            base.Icon = Icon.ExtractAssociatedIcon(Application.ExecutablePath);
            this.cNotif.Icon = Icon.ExtractAssociatedIcon(Application.ExecutablePath);
            base.Hide();
            this.ListUpdate(true, false);
        }
        
        private void Form1_VisibleChanged(object sender, EventArgs e)
        {
            if (base.Visible)
            {
                base.Activate();
            }
        }
        
        private void InitializeComponent()
        {
            ComponentResourceManager manager = null;
            ToolStripItem[] toolStripItems = null;
            this.components = new Container();
            manager = new ComponentResourceManager(typeof(Form1));
            this.cNotif = new NotifyIcon(this.components);
            this.cMenu = new ContextMenuStrip(this.components);
            this.panel1 = new Panel();
            this.panel2 = new Panel();
            this.panel7 = new Panel();
            this.panel8 = new Panel();
            this.tableLayoutPanel2 = new TableLayoutPanel();
            this.label5 = new Label();
            this.label3 = new Label();
            this.panel11 = new Panel();
            this.wPath = new TextBox();
            this.wBrowse = new PictureBox();
            this.panel12 = new Panel();
            this.panel15 = new Panel();
            this.wArgs = new TextBox();
            this.tableLayoutPanel1 = new TableLayoutPanel();
            this.panel13 = new Panel();
            this.label4 = new Label();
            this.wName = new TextBox();
            this.panel14 = new Panel();
            this.label6 = new Label();
            this.wCategory = new TextBox();
            this.panel10 = new Panel();
            this.wSave = new PictureBox();
            this.wRemove = new PictureBox();
            this.wAdd = new PictureBox();
            this.panel9 = new Panel();
            this.pictureBox9 = new PictureBox();
            this.panel4 = new Panel();
            this.yRefresh = new PictureBox();
            this.yLaunch = new PictureBox();
            this.yTop = new PictureBox();
            this.yUp = new PictureBox();
            this.yDown = new PictureBox();
            this.yBottom = new PictureBox();
            this.panel3 = new Panel();
            this.xMainlist = new ListBox();
            this.xTitlebarGroup = new Panel();
            this.cSys = new ContextMenuStrip(this.components);
            this.mHide = new ToolStripMenuItem();
            this.toolStripSeparator1 = new ToolStripSeparator();
            this.mExit = new ToolStripMenuItem();
            this.xTitlebar = new Label();
            this.xLogo = new PictureBox();
            this.xMinimize = new Button();
            this.panel6 = new Panel();
            this.label1 = new Label();
            this.zLink = new LinkLabel();
            this.timer1 = new Timer(this.components);
            this.panel1.SuspendLayout();
            this.panel2.SuspendLayout();
            this.panel7.SuspendLayout();
            this.panel8.SuspendLayout();
            this.tableLayoutPanel2.SuspendLayout();
            this.panel11.SuspendLayout();
            ((ISupportInitialize) this.wBrowse).BeginInit();
            this.panel12.SuspendLayout();
            this.panel15.SuspendLayout();
            this.tableLayoutPanel1.SuspendLayout();
            this.panel13.SuspendLayout();
            this.panel14.SuspendLayout();
            this.panel10.SuspendLayout();
            ((ISupportInitialize) this.wSave).BeginInit();
            ((ISupportInitialize) this.wRemove).BeginInit();
            ((ISupportInitialize) this.wAdd).BeginInit();
            this.panel9.SuspendLayout();
            ((ISupportInitialize) this.pictureBox9).BeginInit();
            this.panel4.SuspendLayout();
            ((ISupportInitialize) this.yRefresh).BeginInit();
            ((ISupportInitialize) this.yLaunch).BeginInit();
            ((ISupportInitialize) this.yTop).BeginInit();
            ((ISupportInitialize) this.yUp).BeginInit();
            ((ISupportInitialize) this.yDown).BeginInit();
            ((ISupportInitialize) this.yBottom).BeginInit();
            this.panel3.SuspendLayout();
            this.xTitlebarGroup.SuspendLayout();
            this.cSys.SuspendLayout();
            ((ISupportInitialize) this.xLogo).BeginInit();
            this.panel6.SuspendLayout();
            base.SuspendLayout();
            this.cNotif.ContextMenuStrip = this.cMenu;
            this.cNotif.Text = "cNotif";
            this.cNotif.Visible = true;
            this.cNotif.MouseClick += new MouseEventHandler(this.cNotif_MouseClick);
            this.cMenu.Name = "cMenu";
            Size size48 = new Size(0x3d, 4);
            this.cMenu.Size = size48;
            Color transparent = Color.Transparent;
            this.panel1.BackColor = transparent;
            this.panel1.BackgroundImage = (Image) manager.GetObject("panel1.BackgroundImage");
            this.panel1.BackgroundImageLayout = ImageLayout.Stretch;
            this.panel1.Controls.Add(this.panel2);
            this.panel1.Controls.Add(this.xTitlebarGroup);
            this.panel1.Controls.Add(this.panel6);
            this.panel1.Dock = DockStyle.Fill;
            Point point42 = new Point(1, 1);
            this.panel1.Location = point42;
            this.panel1.Name = "panel1";
            Size size47 = new Size(0x2e6, 0x193);
            this.panel1.Size = size47;
            this.panel1.TabIndex = 1;
            Color color40 = Color.Transparent;
            this.panel2.BackColor = color40;
            this.panel2.Controls.Add(this.panel7);
            this.panel2.Controls.Add(this.panel4);
            this.panel2.Controls.Add(this.panel3);
            this.panel2.Dock = DockStyle.Fill;
            Point point41 = new Point(0, 0x20);
            this.panel2.Location = point41;
            this.panel2.Name = "panel2";
            Padding padding21 = new Padding(5);
            this.panel2.Padding = padding21;
            Size size46 = new Size(0x2e6, 0x153);
            this.panel2.Size = size46;
            this.panel2.TabIndex = 6;
            this.panel7.Controls.Add(this.panel8);
            this.panel7.Controls.Add(this.panel9);
            this.panel7.Dock = DockStyle.Fill;
            Point point40 = new Point(0xf9, 5);
            this.panel7.Location = point40;
            this.panel7.Name = "panel7";
            Padding padding20 = new Padding(5);
            this.panel7.Padding = padding20;
            Size size45 = new Size(0x1e8, 0x149);
            this.panel7.Size = size45;
            this.panel7.TabIndex = 5;
            Color color39 = Color.FromArgb(0x7f, 0, 0, 0);
            this.panel8.BackColor = color39;
            this.panel8.Controls.Add(this.tableLayoutPanel2);
            this.panel8.Controls.Add(this.tableLayoutPanel1);
            this.panel8.Controls.Add(this.panel10);
            this.panel8.Dock = DockStyle.Fill;
            Point point39 = new Point(5, 0x55);
            this.panel8.Location = point39;
            this.panel8.Name = "panel8";
            Padding padding19 = new Padding(5);
            this.panel8.Padding = padding19;
            Size size44 = new Size(0x1de, 0xef);
            this.panel8.Size = size44;
            this.panel8.TabIndex = 9;
            Color color38 = Color.Transparent;
            this.tableLayoutPanel2.BackColor = color38;
            this.tableLayoutPanel2.ColumnCount = 2;
            this.tableLayoutPanel2.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 12.82051f));
            this.tableLayoutPanel2.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 87.17949f));
            this.tableLayoutPanel2.Controls.Add(this.label5, 0, 1);
            this.tableLayoutPanel2.Controls.Add(this.label3, 0, 0);
            this.tableLayoutPanel2.Controls.Add(this.panel11, 1, 0);
            this.tableLayoutPanel2.Controls.Add(this.panel12, 1, 1);
            this.tableLayoutPanel2.Dock = DockStyle.Fill;
            Point point38 = new Point(5, 0x3f);
            this.tableLayoutPanel2.Location = point38;
            this.tableLayoutPanel2.Name = "tableLayoutPanel2";
            this.tableLayoutPanel2.RowCount = 2;
            this.tableLayoutPanel2.RowStyles.Add(new RowStyle(SizeType.Percent, 29.13386f));
            this.tableLayoutPanel2.RowStyles.Add(new RowStyle(SizeType.Percent, 70.86614f));
            Size size43 = new Size(0x1d4, 0x7f);
            this.tableLayoutPanel2.Size = size43;
            this.tableLayoutPanel2.TabIndex = 15;
            Color color37 = Color.Transparent;
            this.label5.BackColor = color37;
            Color white = Color.White;
            this.label5.ForeColor = white;
            Point point37 = new Point(3, 0x25);
            this.label5.Location = point37;
            this.label5.Name = "label5";
            Size size42 = new Size(0x35, 90);
            this.label5.Size = size42;
            this.label5.TabIndex = 0x12;
            this.label5.Text = "Args:";
            this.label5.TextAlign = ContentAlignment.MiddleCenter;
            Color color35 = Color.Transparent;
            this.label3.BackColor = color35;
            this.label3.Dock = DockStyle.Fill;
            Color color34 = Color.White;
            this.label3.ForeColor = color34;
            Point point36 = new Point(3, 0);
            this.label3.Location = point36;
            this.label3.Name = "label3";
            Size size41 = new Size(0x35, 0x25);
            this.label3.Size = size41;
            this.label3.TabIndex = 15;
            this.label3.Text = "Path:";
            this.label3.TextAlign = ContentAlignment.MiddleCenter;
            Color color33 = Color.Transparent;
            this.panel11.BackColor = color33;
            this.panel11.Controls.Add(this.wPath);
            this.panel11.Controls.Add(this.wBrowse);
            this.panel11.Dock = DockStyle.Fill;
            Point point35 = new Point(0x3b, 0);
            this.panel11.Location = point35;
            Padding padding18 = new Padding(0);
            this.panel11.Margin = padding18;
            this.panel11.Name = "panel11";
            Padding padding17 = new Padding(5);
            this.panel11.Padding = padding17;
            Size size40 = new Size(0x199, 0x25);
            this.panel11.Size = size40;
            this.panel11.TabIndex = 0x11;
            this.wPath.AutoCompleteSource = AutoCompleteSource.FileSystem;
            Color dimGray = Color.DimGray;
            this.wPath.BackColor = dimGray;
            this.wPath.BorderStyle = BorderStyle.FixedSingle;
            this.wPath.Dock = DockStyle.Fill;
            Color color31 = Color.White;
            this.wPath.ForeColor = color31;
            Point point34 = new Point(5, 5);
            this.wPath.Location = point34;
            this.wPath.Name = "wPath";
            Size size39 = new Size(0x171, 0x1a);
            this.wPath.Size = size39;
            this.wPath.TabIndex = 9;
            Color color30 = Color.Transparent;
            this.wBrowse.BackColor = color30;
            this.wBrowse.Dock = DockStyle.Right;
            this.wBrowse.Image = (Image) manager.GetObject("wBrowse.Image");
            Point point33 = new Point(0x176, 5);
            this.wBrowse.Location = point33;
            Padding padding16 = new Padding(0);
            this.wBrowse.Margin = padding16;
            this.wBrowse.Name = "wBrowse";
            Size size38 = new Size(30, 0x1b);
            this.wBrowse.Size = size38;
            this.wBrowse.SizeMode = PictureBoxSizeMode.CenterImage;
            this.wBrowse.TabIndex = 10;
            this.wBrowse.TabStop = false;
            this.wBrowse.Click += new EventHandler(this.wBrowse_Click);
            this.panel12.Controls.Add(this.panel15);
            this.panel12.Dock = DockStyle.Fill;
            Point point32 = new Point(0x3b, 0x25);
            this.panel12.Location = point32;
            Padding padding15 = new Padding(0);
            this.panel12.Margin = padding15;
            this.panel12.Name = "panel12";
            Size size37 = new Size(0x199, 90);
            this.panel12.Size = size37;
            this.panel12.TabIndex = 0x13;
            this.panel15.Controls.Add(this.wArgs);
            this.panel15.Dock = DockStyle.Fill;
            Point point31 = new Point(0, 0);
            this.panel15.Location = point31;
            this.panel15.Name = "panel15";
            Padding padding14 = new Padding(5);
            this.panel15.Padding = padding14;
            Size size36 = new Size(0x199, 90);
            this.panel15.Size = size36;
            this.panel15.TabIndex = 0;
            Color color29 = Color.DimGray;
            this.wArgs.BackColor = color29;
            this.wArgs.BorderStyle = BorderStyle.FixedSingle;
            this.wArgs.Dock = DockStyle.Fill;
            Color color28 = Color.White;
            this.wArgs.ForeColor = color28;
            Point point30 = new Point(5, 5);
            this.wArgs.Location = point30;
            this.wArgs.Multiline = true;
            this.wArgs.Name = "wArgs";
            Size size35 = new Size(0x18f, 80);
            this.wArgs.Size = size35;
            this.wArgs.TabIndex = 11;
            this.wArgs.KeyDown += new KeyEventHandler(this.wArgs_KeyDown);
            Color color27 = Color.Transparent;
            this.tableLayoutPanel1.BackColor = color27;
            this.tableLayoutPanel1.ColumnCount = 2;
            this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
            this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
            this.tableLayoutPanel1.Controls.Add(this.panel13, 0, 0);
            this.tableLayoutPanel1.Controls.Add(this.panel14, 1, 0);
            this.tableLayoutPanel1.Dock = DockStyle.Top;
            Point point29 = new Point(5, 5);
            this.tableLayoutPanel1.Location = point29;
            this.tableLayoutPanel1.Name = "tableLayoutPanel1";
            this.tableLayoutPanel1.RowCount = 1;
            this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
            Size size34 = new Size(0x1d4, 0x3a);
            this.tableLayoutPanel1.Size = size34;
            this.tableLayoutPanel1.TabIndex = 13;
            Color color26 = Color.Transparent;
            this.panel13.BackColor = color26;
            this.panel13.Controls.Add(this.label4);
            this.panel13.Controls.Add(this.wName);
            this.panel13.Dock = DockStyle.Fill;
            Point point28 = new Point(0, 0);
            this.panel13.Location = point28;
            Padding padding13 = new Padding(0);
            this.panel13.Margin = padding13;
            this.panel13.Name = "panel13";
            Padding padding12 = new Padding(5);
            this.panel13.Padding = padding12;
            Size size33 = new Size(0xea, 0x3a);
            this.panel13.Size = size33;
            this.panel13.TabIndex = 0;
            this.label4.Dock = DockStyle.Fill;
            Color color25 = Color.White;
            this.label4.ForeColor = color25;
            Point point27 = new Point(5, 5);
            this.label4.Location = point27;
            this.label4.Name = "label4";
            Padding padding11 = new Padding(0, 0, 0, 2);
            this.label4.Padding = padding11;
            Size size32 = new Size(0xe0, 0x16);
            this.label4.Size = size32;
            this.label4.TabIndex = 0;
            this.label4.Text = "Name:";
            this.label4.TextAlign = ContentAlignment.BottomLeft;
            Color color24 = Color.DimGray;
            this.wName.BackColor = color24;
            this.wName.BorderStyle = BorderStyle.FixedSingle;
            this.wName.Dock = DockStyle.Bottom;
            Color color23 = Color.White;
            this.wName.ForeColor = color23;
            Point point26 = new Point(5, 0x1b);
            this.wName.Location = point26;
            this.wName.Name = "wName";
            Size size31 = new Size(0xe0, 0x1a);
            this.wName.Size = size31;
            this.wName.TabIndex = 10;
            Color color22 = Color.Transparent;
            this.panel14.BackColor = color22;
            this.panel14.Controls.Add(this.label6);
            this.panel14.Controls.Add(this.wCategory);
            this.panel14.Dock = DockStyle.Fill;
            Point point25 = new Point(0xea, 0);
            this.panel14.Location = point25;
            Padding padding10 = new Padding(0);
            this.panel14.Margin = padding10;
            this.panel14.Name = "panel14";
            Padding padding9 = new Padding(5);
            this.panel14.Padding = padding9;
            Size size30 = new Size(0xea, 0x3a);
            this.panel14.Size = size30;
            this.panel14.TabIndex = 1;
            this.label6.Dock = DockStyle.Fill;
            Color color21 = Color.White;
            this.label6.ForeColor = color21;
            Point point24 = new Point(5, 5);
            this.label6.Location = point24;
            this.label6.Name = "label6";
            Padding padding8 = new Padding(0, 0, 0, 2);
            this.label6.Padding = padding8;
            Size size29 = new Size(0xe0, 0x16);
            this.label6.Size = size29;
            this.label6.TabIndex = 11;
            this.label6.Text = "Category:";
            this.label6.TextAlign = ContentAlignment.BottomLeft;
            Color color20 = Color.DimGray;
            this.wCategory.BackColor = color20;
            this.wCategory.BorderStyle = BorderStyle.FixedSingle;
            this.wCategory.Dock = DockStyle.Bottom;
            Color color19 = Color.White;
            this.wCategory.ForeColor = color19;
            Point point23 = new Point(5, 0x1b);
            this.wCategory.Location = point23;
            this.wCategory.Name = "wCategory";
            Size size28 = new Size(0xe0, 0x1a);
            this.wCategory.Size = size28;
            this.wCategory.TabIndex = 12;
            Color color18 = Color.Transparent;
            this.panel10.BackColor = color18;
            this.panel10.Controls.Add(this.wSave);
            this.panel10.Controls.Add(this.wRemove);
            this.panel10.Controls.Add(this.wAdd);
            this.panel10.Dock = DockStyle.Bottom;
            Point point22 = new Point(5, 190);
            this.panel10.Location = point22;
            this.panel10.Name = "panel10";
            Padding padding7 = new Padding(3);
            this.panel10.Padding = padding7;
            Size size27 = new Size(0x1d4, 0x2c);
            this.panel10.Size = size27;
            this.panel10.TabIndex = 7;
            Color color17 = Color.Transparent;
            this.wSave.BackColor = color17;
            this.wSave.Dock = DockStyle.Left;
            this.wSave.Image = (Image) manager.GetObject("wSave.Image");
            Point point21 = new Point(0x29, 3);
            this.wSave.Location = point21;
            this.wSave.Name = "wSave";
            Size size26 = new Size(0x26, 0x26);
            this.wSave.Size = size26;
            this.wSave.SizeMode = PictureBoxSizeMode.CenterImage;
            this.wSave.TabIndex = 8;
            this.wSave.TabStop = false;
            this.wSave.Click += new EventHandler(this.wSave_Click);
            Color color16 = Color.Transparent;
            this.wRemove.BackColor = color16;
            this.wRemove.Dock = DockStyle.Right;
            this.wRemove.Image = (Image) manager.GetObject("wRemove.Image");
            Point point20 = new Point(0x1ab, 3);
            this.wRemove.Location = point20;
            this.wRemove.Name = "wRemove";
            Size size25 = new Size(0x26, 0x26);
            this.wRemove.Size = size25;
            this.wRemove.SizeMode = PictureBoxSizeMode.CenterImage;
            this.wRemove.TabIndex = 9;
            this.wRemove.TabStop = false;
            this.wRemove.Click += new EventHandler(this.wRemove_Click);
            Color color15 = Color.Transparent;
            this.wAdd.BackColor = color15;
            this.wAdd.Dock = DockStyle.Left;
            this.wAdd.Image = (Image) manager.GetObject("wAdd.Image");
            Point point19 = new Point(3, 3);
            this.wAdd.Location = point19;
            this.wAdd.Name = "wAdd";
            Size size24 = new Size(0x26, 0x26);
            this.wAdd.Size = size24;
            this.wAdd.SizeMode = PictureBoxSizeMode.CenterImage;
            this.wAdd.TabIndex = 5;
            this.wAdd.TabStop = false;
            this.wAdd.Click += new EventHandler(this.wAdd_Click);
            this.panel9.Controls.Add(this.pictureBox9);
            this.panel9.Dock = DockStyle.Top;
            Point point18 = new Point(5, 5);
            this.panel9.Location = point18;
            this.panel9.Name = "panel9";
            Size size23 = new Size(0x1de, 80);
            this.panel9.Size = size23;
            this.panel9.TabIndex = 8;
            this.pictureBox9.Dock = DockStyle.Right;
            this.pictureBox9.Image = (Image) manager.GetObject("pictureBox9.Image");
            Point point17 = new Point(0xe9, 0);
            this.pictureBox9.Location = point17;
            this.pictureBox9.Name = "pictureBox9";
            Size size22 = new Size(0xf5, 80);
            this.pictureBox9.Size = size22;
            this.pictureBox9.SizeMode = PictureBoxSizeMode.CenterImage;
            this.pictureBox9.TabIndex = 7;
            this.pictureBox9.TabStop = false;
            this.panel4.Controls.Add(this.yRefresh);
            this.panel4.Controls.Add(this.yLaunch);
            this.panel4.Controls.Add(this.yTop);
            this.panel4.Controls.Add(this.yUp);
            this.panel4.Controls.Add(this.yDown);
            this.panel4.Controls.Add(this.yBottom);
            this.panel4.Dock = DockStyle.Left;
            Point point16 = new Point(0xcd, 5);
            this.panel4.Location = point16;
            this.panel4.Name = "panel4";
            Padding padding6 = new Padding(3);
            this.panel4.Padding = padding6;
            Size size21 = new Size(0x2c, 0x149);
            this.panel4.Size = size21;
            this.panel4.TabIndex = 4;
            this.yRefresh.Dock = DockStyle.Top;
            this.yRefresh.Image = (Image) manager.GetObject("yRefresh.Image");
            Point point15 = new Point(3, 0x29);
            this.yRefresh.Location = point15;
            this.yRefresh.Name = "yRefresh";
            Size size20 = new Size(0x26, 0x26);
            this.yRefresh.Size = size20;
            this.yRefresh.SizeMode = PictureBoxSizeMode.CenterImage;
            this.yRefresh.TabIndex = 12;
            this.yRefresh.TabStop = false;
            this.yRefresh.Click += new EventHandler(this.yRefresh_Click);
            this.yLaunch.Dock = DockStyle.Top;
            this.yLaunch.Image = (Image) manager.GetObject("yLaunch.Image");
            Point point14 = new Point(3, 3);
            this.yLaunch.Location = point14;
            this.yLaunch.Name = "yLaunch";
            Size size19 = new Size(0x26, 0x26);
            this.yLaunch.Size = size19;
            this.yLaunch.SizeMode = PictureBoxSizeMode.CenterImage;
            this.yLaunch.TabIndex = 7;
            this.yLaunch.TabStop = false;
            this.yLaunch.Click += new EventHandler(this.yLaunch_Click);
            this.yTop.Dock = DockStyle.Bottom;
            this.yTop.Image = (Image) manager.GetObject("yTop.Image");
            Point point13 = new Point(3, 0xae);
            this.yTop.Location = point13;
            this.yTop.Name = "yTop";
            Size size18 = new Size(0x26, 0x26);
            this.yTop.Size = size18;
            this.yTop.SizeMode = PictureBoxSizeMode.CenterImage;
            this.yTop.TabIndex = 13;
            this.yTop.TabStop = false;
            this.yTop.Click += new EventHandler(this.yTop_Click);
            this.yUp.Dock = DockStyle.Bottom;
            this.yUp.Image = (Image) manager.GetObject("yUp.Image");
            Point point12 = new Point(3, 0xd4);
            this.yUp.Location = point12;
            this.yUp.Name = "yUp";
            Size size17 = new Size(0x26, 0x26);
            this.yUp.Size = size17;
            this.yUp.SizeMode = PictureBoxSizeMode.CenterImage;
            this.yUp.TabIndex = 0x10;
            this.yUp.TabStop = false;
            this.yUp.Click += new EventHandler(this.yUp_Click);
            this.yDown.Dock = DockStyle.Bottom;
            this.yDown.Image = (Image) manager.GetObject("yDown.Image");
            Point point11 = new Point(3, 250);
            this.yDown.Location = point11;
            this.yDown.Name = "yDown";
            Size size16 = new Size(0x26, 0x26);
            this.yDown.Size = size16;
            this.yDown.SizeMode = PictureBoxSizeMode.CenterImage;
            this.yDown.TabIndex = 15;
            this.yDown.TabStop = false;
            this.yDown.Click += new EventHandler(this.yDown_Click);
            this.yBottom.Dock = DockStyle.Bottom;
            this.yBottom.Image = (Image) manager.GetObject("yBottom.Image");
            Point point10 = new Point(3, 0x120);
            this.yBottom.Location = point10;
            this.yBottom.Name = "yBottom";
            Size size15 = new Size(0x26, 0x26);
            this.yBottom.Size = size15;
            this.yBottom.SizeMode = PictureBoxSizeMode.CenterImage;
            this.yBottom.TabIndex = 14;
            this.yBottom.TabStop = false;
            this.yBottom.Click += new EventHandler(this.yBottom_Click);
            this.panel3.Controls.Add(this.xMainlist);
            this.panel3.Dock = DockStyle.Left;
            Point point9 = new Point(5, 5);
            this.panel3.Location = point9;
            this.panel3.Name = "panel3";
            Padding padding5 = new Padding(5);
            this.panel3.Padding = padding5;
            Size size14 = new Size(200, 0x149);
            this.panel3.Size = size14;
            this.panel3.TabIndex = 3;
            this.xMainlist.AllowDrop = true;
            Color color14 = Color.FromArgb(0x65, 0x77, 0x65);
            this.xMainlist.BackColor = color14;
            this.xMainlist.BorderStyle = BorderStyle.None;
            this.xMainlist.Dock = DockStyle.Fill;
            Color color13 = Color.White;
            this.xMainlist.ForeColor = color13;
            this.xMainlist.FormattingEnabled = true;
            this.xMainlist.IntegralHeight = false;
            this.xMainlist.ItemHeight = 0x12;
            Point point8 = new Point(5, 5);
            this.xMainlist.Location = point8;
            this.xMainlist.Name = "xMainlist";
            Size size13 = new Size(190, 0x13f);
            this.xMainlist.Size = size13;
            this.xMainlist.TabIndex = 2;
            this.xMainlist.SelectedIndexChanged += new EventHandler(this.xMainlist_SelectedIndexChanged);
            Color color12 = Color.FromArgb(0xdf, 0xff, 0xff, 0xff);
            this.xTitlebarGroup.BackColor = color12;
            this.xTitlebarGroup.BackgroundImageLayout = ImageLayout.Center;
            this.xTitlebarGroup.ContextMenuStrip = this.cSys;
            this.xTitlebarGroup.Controls.Add(this.xTitlebar);
            this.xTitlebarGroup.Controls.Add(this.xLogo);
            this.xTitlebarGroup.Controls.Add(this.xMinimize);
            this.xTitlebarGroup.Dock = DockStyle.Top;
            Point point7 = new Point(0, 0);
            this.xTitlebarGroup.Location = point7;
            this.xTitlebarGroup.Name = "xTitlebarGroup";
            Size size12 = new Size(0x2e6, 0x20);
            this.xTitlebarGroup.Size = size12;
            this.xTitlebarGroup.TabIndex = 7;
            toolStripItems = new ToolStripItem[] { this.mHide, this.toolStripSeparator1, this.mExit };
            this.cSys.Items.AddRange(toolStripItems);
            this.cSys.Name = "cSys";
            Size size11 = new Size(0x6b, 0x36);
            this.cSys.Size = size11;
            this.cSys.Opening += new CancelEventHandler(this.cSys_Opening);
            this.mHide.Name = "mHide";
            Size size10 = new Size(0x6a, 0x16);
            this.mHide.Size = size10;
            this.mHide.Text = "Hide";
            this.mHide.Click += new EventHandler(this.WinHider);
            this.toolStripSeparator1.Name = "toolStripSeparator1";
            Size size9 = new Size(0x67, 6);
            this.toolStripSeparator1.Size = size9;
            this.mExit.Name = "mExit";
            Size size8 = new Size(0x6a, 0x16);
            this.mExit.Size = size8;
            this.mExit.Text = "Exit";
            this.mExit.Click += new EventHandler(this.WinQuitter);
            Color color11 = Color.Transparent;
            this.xTitlebar.BackColor = color11;
            this.xTitlebar.Dock = DockStyle.Fill;
            this.xTitlebar.Font = new Font("Tahoma", 12f, FontStyle.Regular, GraphicsUnit.Point, 0);
            Point point6 = new Point(0x20, 0);
            this.xTitlebar.Location = point6;
            this.xTitlebar.Name = "xTitlebar";
            Size size7 = new Size(0x2a6, 0x20);
            this.xTitlebar.Size = size7;
            this.xTitlebar.TabIndex = 0;
            this.xTitlebar.Text = "Launcher X";
            this.xTitlebar.TextAlign = ContentAlignment.MiddleCenter;
            this.xTitlebar.MouseMove += new MouseEventHandler(this.xTitlebar_MouseMove);
            this.xTitlebar.MouseDown += new MouseEventHandler(this.xTitlebar_MouseDown);
            this.xTitlebar.MouseUp += new MouseEventHandler(this.xTitlebar_MouseUp);
            Color color10 = Color.Transparent;
            this.xLogo.BackColor = color10;
            this.xLogo.Dock = DockStyle.Left;
            this.xLogo.Image = (Image) manager.GetObject("xLogo.Image");
            Point point5 = new Point(0, 0);
            this.xLogo.Location = point5;
            this.xLogo.Name = "xLogo";
            Size size6 = new Size(0x20, 0x20);
            this.xLogo.Size = size6;
            this.xLogo.SizeMode = PictureBoxSizeMode.CenterImage;
            this.xLogo.TabIndex = 9;
            this.xLogo.TabStop = false;
            this.xLogo.DoubleClick += new EventHandler(this.WinHider);
            Color color9 = Color.Transparent;
            this.xMinimize.BackColor = color9;
            this.xMinimize.Dock = DockStyle.Right;
            this.xMinimize.FlatAppearance.BorderSize = 0;
            this.xMinimize.FlatStyle = FlatStyle.Flat;
            this.xMinimize.Image = (Image) manager.GetObject("xMinimize.Image");
            this.xMinimize.ImageAlign = ContentAlignment.BottomRight;
            Point point4 = new Point(710, 0);
            this.xMinimize.Location = point4;
            Padding padding4 = new Padding(0);
            this.xMinimize.Margin = padding4;
            this.xMinimize.Name = "xMinimize";
            Size size5 = new Size(0x20, 0x20);
            this.xMinimize.Size = size5;
            this.xMinimize.TabIndex = 8;
            this.xMinimize.TextImageRelation = TextImageRelation.ImageAboveText;
            this.xMinimize.UseVisualStyleBackColor = false;
            this.xMinimize.Click += new EventHandler(this.WinHider);
            Color color8 = Color.FromArgb(0x7f, 0, 0, 0);
            this.panel6.BackColor = color8;
            this.panel6.Controls.Add(this.label1);
            this.panel6.Controls.Add(this.zLink);
            this.panel6.Dock = DockStyle.Bottom;
            Point point3 = new Point(0, 0x173);
            this.panel6.Location = point3;
            this.panel6.Name = "panel6";
            Size size4 = new Size(0x2e6, 0x20);
            this.panel6.Size = size4;
            this.panel6.TabIndex = 5;
            Color color7 = Color.Transparent;
            this.label1.BackColor = color7;
            this.label1.Dock = DockStyle.Fill;
            this.label1.Font = new Font("Tahoma", 11.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
            Color color6 = Color.White;
            this.label1.ForeColor = color6;
            Point point2 = new Point(0, 0);
            this.label1.Location = point2;
            this.label1.Name = "label1";
            Padding padding3 = new Padding(10, 0, 10, 0);
            this.label1.Padding = padding3;
            Size size3 = new Size(0x240, 0x20);
            this.label1.Size = size3;
            this.label1.TabIndex = 5;
            this.label1.Text = "Platinum X 2nd Gen (Personal)";
            this.label1.TextAlign = ContentAlignment.MiddleLeft;
            Color powderBlue = Color.PowderBlue;
            this.zLink.ActiveLinkColor = powderBlue;
            Color color4 = Color.Transparent;
            this.zLink.BackColor = color4;
            this.zLink.Dock = DockStyle.Right;
            Color color3 = Color.White;
            this.zLink.ForeColor = color3;
            LinkArea area = new LinkArea(7, 9);
            this.zLink.LinkArea = area;
            this.zLink.LinkBehavior = LinkBehavior.HoverUnderline;
            Color color2 = Color.PowderBlue;
            this.zLink.LinkColor = color2;
            Point point = new Point(0x240, 0);
            this.zLink.Location = point;
            this.zLink.Name = "zLink";
            Padding padding2 = new Padding(10, 0, 10, 0);
            this.zLink.Padding = padding2;
            Size size2 = new Size(0xa6, 0x20);
            this.zLink.Size = size2;
            this.zLink.TabIndex = 4;
            this.zLink.TabStop = true;
            this.zLink.Text = "\x00a9 2016 CSX NEONS";
            this.zLink.TextAlign = ContentAlignment.MiddleRight;
            this.zLink.UseCompatibleTextRendering = true;
            Color color = Color.PowderBlue;
            this.zLink.VisitedLinkColor = color;
            this.zLink.LinkClicked += new LinkLabelLinkClickedEventHandler(this.zLink_LinkClicked);
            this.timer1.Interval = 0x1388;
            this.timer1.Tick += new EventHandler(this.timer1_Tick);
            SizeF ef = new SizeF(96f, 96f);
            base.AutoScaleDimensions = ef;
            base.AutoScaleMode = AutoScaleMode.Dpi;
            this.BackgroundImage = (Image) manager.GetObject("$this.BackgroundImage");
            this.BackgroundImageLayout = ImageLayout.Stretch;
            Size size = new Size(0x2e8, 0x195);
            base.ClientSize = size;
            base.Controls.Add(this.panel1);
            this.DoubleBuffered = true;
            this.Font = new Font("Tahoma", 11.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
            base.FormBorderStyle = FormBorderStyle.None;
            base.MaximizeBox = false;
            base.Name = "Form1";
            Padding padding = new Padding(1);
            base.Padding = padding;
            base.SizeGripStyle = SizeGripStyle.Hide;
            base.StartPosition = FormStartPosition.CenterScreen;
            this.Text = "Launcher X";
            base.Load += new EventHandler(this.Form1_Load);
            base.VisibleChanged += new EventHandler(this.Form1_VisibleChanged);
            base.FormClosing += new FormClosingEventHandler(this.Form1_FormClosing);
            this.panel1.ResumeLayout(false);
            this.panel2.ResumeLayout(false);
            this.panel7.ResumeLayout(false);
            this.panel8.ResumeLayout(false);
            this.tableLayoutPanel2.ResumeLayout(false);
            this.panel11.ResumeLayout(false);
            this.panel11.PerformLayout();
            ((ISupportInitialize) this.wBrowse).EndInit();
            this.panel12.ResumeLayout(false);
            this.panel15.ResumeLayout(false);
            this.panel15.PerformLayout();
            this.tableLayoutPanel1.ResumeLayout(false);
            this.panel13.ResumeLayout(false);
            this.panel13.PerformLayout();
            this.panel14.ResumeLayout(false);
            this.panel14.PerformLayout();
            this.panel10.ResumeLayout(false);
            ((ISupportInitialize) this.wSave).EndInit();
            ((ISupportInitialize) this.wRemove).EndInit();
            ((ISupportInitialize) this.wAdd).EndInit();
            this.panel9.ResumeLayout(false);
            ((ISupportInitialize) this.pictureBox9).EndInit();
            this.panel4.ResumeLayout(false);
            ((ISupportInitialize) this.yRefresh).EndInit();
            ((ISupportInitialize) this.yLaunch).EndInit();
            ((ISupportInitialize) this.yTop).EndInit();
            ((ISupportInitialize) this.yUp).EndInit();
            ((ISupportInitialize) this.yDown).EndInit();
            ((ISupportInitialize) this.yBottom).EndInit();
            this.panel3.ResumeLayout(false);
            this.xTitlebarGroup.ResumeLayout(false);
            this.cSys.ResumeLayout(false);
            ((ISupportInitialize) this.xLogo).EndInit();
            this.panel6.ResumeLayout(false);
            base.ResumeLayout(false);
        }
        
        private void LaunchItem(int n)
        {
            ProcessStartInfo startInfo = null;
            string[] strArray = null;
            try
            {
                strArray = flib.SplitData(this.iPathList[n]);
                startInfo = new ProcessStartInfo {
                    WorkingDirectory = Path.GetDirectoryName(strArray[2]),
                    FileName = Path.GetFileName(strArray[2]),
                    Arguments = strArray[3]
                };
                Process.Start(startInfo);
            }
            catch (Exception exception)
            {
                MessageBox.Show(exception.Message, exception.Source, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
        }
        
        private void ListUpdate([MarshalAs(UnmanagedType.U1)] bool iLoad, [MarshalAs(UnmanagedType.U1)] bool iSave)
        {
            List<string> list = null;
            string iText = null;
            string[] strArray = null;
            int selectedIndex = this.xMainlist.SelectedIndex;
            if (iLoad)
            {
                list = flib.LoadFromFile(this.ConfigPath());
            }
            else
            {
                list = new List<string>(0);
                list.AddRange(this.iPathList);
                list.AddRange(this.Invalidated);
            }
            this.iPathList.Clear();
            this.Invalidated.Clear();
            this.xMainlist.Items.Clear();
            this.cMenu.Items.Clear();
            List<string>.Enumerator enumerator = list.GetEnumerator();
            while (enumerator.MoveNext())
            {
                iText = enumerator.Current;
                strArray = flib.SplitData(iText);
                if (File.Exists(strArray[2]))
                {
                    this.iPathList.Add(iText);
                    continue;
                }
                this.Invalidated.Add(iText);
            }
            for (int i = 0; i < this.iPathList.Count; i++)
            {
                this.xMainlist.Items.Add(flib.SplitData(this.iPathList[i])[0]);
                this.AddMenuItem(flib.SplitData(this.iPathList[i])[0], flib.SplitData(this.iPathList[i])[2], i);
            }
            this.AddPost();
            if (iSave)
            {
                this.listchanged = true;
                this.timer1.Start();
            }
            if (this.iPathList.Count > selectedIndex)
            {
                this.xMainlist.SelectedIndex = selectedIndex;
            }
            else if (this.iPathList.Count > 0)
            {
                this.xMainlist.SelectedIndex = this.iPathList.Count - 1;
            }
        }
        
        private void MenuItem_Click(object sender, EventArgs e)
        {
            this.LaunchItem((int) ((ToolStripItem) sender).Tag);
        }
        
        private void timer1_Tick(object sender, EventArgs e)
        {
            List<string> iData = null;
            if (this.listchanged)
            {
                this.timer1.Stop();
                iData = new List<string>(0);
                iData.AddRange(this.iPathList);
                iData.AddRange(this.Invalidated);
                flib.SaveToFile(this.ConfigPath(), iData);
                this.listchanged = false;
            }
        }
        
        private void wAdd_Click(object sender, EventArgs e)
        {
            if (!File.Exists(this.wPath.Text))
            {
                MessageBox.Show("File doesn't exist. Please try again...", "Invalid Path", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
            else
            {
                this.iPathList.Add(flib.MergeData(this.wName.Text, this.wCategory.Text, this.wPath.Text, this.wArgs.Text));
                this.ListUpdate(false, true);
                this.xMainlist.SelectedIndex = this.iPathList.Count - 1;
            }
        }
        
        private void wArgs_KeyDown(object sender, KeyEventArgs e)
        {
            if ((e.KeyCode == Keys.Enter) || (e.KeyCode == Keys.Enter))
            {
                e.SuppressKeyPress = true;
            }
        }
        
        private void wBrowse_Click(object sender, EventArgs e)
        {
            OpenFileDialog dialog = null;
            dialog = new OpenFileDialog();
            if (File.Exists(this.wPath.Text))
            {
                dialog.InitialDirectory = Path.GetDirectoryName(this.wPath.Text);
            }
            dialog.Title = "Select File";
            dialog.Multiselect = false;
            dialog.ValidateNames = true;
            dialog.Filter = "All Files|*.*";
            if (dialog.ShowDialog() == DialogResult.OK)
            {
                this.wPath.Text = dialog.FileName;
                this.wName.Text = Path.GetFileNameWithoutExtension(dialog.FileName);
            }
            IDisposable disposable = dialog;
            if (disposable != null)
            {
                disposable.Dispose();
            }
        }
        
        private void WinHider(object sender, EventArgs e)
        {
            base.Hide();
        }
        
        private void WinQuitter(object sender, EventArgs e)
        {
            this.exittor = true;
            Application.Exit();
        }
        
        private void WinVisib(object sender, EventArgs e)
        {
            byte num = base.Visible ? 0 : 1;
            base.Visible = (bool) num;
        }
        
        private void wRemove_Click(object sender, EventArgs e)
        {
            int selectedIndex = this.xMainlist.SelectedIndex;
            if (selectedIndex != -1)
            {
                this.iPathList.RemoveAt(selectedIndex);
                this.ListUpdate(false, true);
            }
        }
        
        private void wSave_Click(object sender, EventArgs e)
        {
            int selectedIndex = this.xMainlist.SelectedIndex;
            if ((selectedIndex != -1) && File.Exists(this.wPath.Text))
            {
                this.iPathList[selectedIndex] = flib.MergeData(this.wName.Text, this.wCategory.Text, this.wPath.Text, this.wArgs.Text);
                this.ListUpdate(false, true);
            }
            else if (selectedIndex == -1)
            {
                MessageBox.Show("Please select an item first...", "Error", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
            else
            {
                MessageBox.Show("File doesn't exist. Please try again...", "Invalid Path", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
        }
        
        private void xMainlist_SelectedIndexChanged(object sender, EventArgs e)
        {
            string[] strArray = null;
            int selectedIndex = this.xMainlist.SelectedIndex;
            if (selectedIndex != -1)
            {
                strArray = flib.SplitData(this.iPathList[selectedIndex]);
                this.wName.Text = strArray[0];
                this.wCategory.Text = strArray[1];
                this.wPath.Text = strArray[2];
                this.wArgs.Text = strArray[3];
            }
        }
        
        private void xTitlebar_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                this.mover = true;
                Point point = new Point(e.X, e.Y);
                this.movepoint = point;
            }
        }
        
        private void xTitlebar_MouseMove(object sender, MouseEventArgs e)
        {
            if (this.mover)
            {
                Point location = base.Location;
                Point point2 = base.Location;
                Point point = new Point((point2.X + e.X) - this.movepoint.X, (location.Y + e.Y) - this.movepoint.Y);
                base.Location = point;
            }
        }
        
        private void xTitlebar_MouseUp(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                this.mover = false;
            }
        }
        
        private void yBottom_Click(object sender, EventArgs e)
        {
            string item = null;
            int selectedIndex = this.xMainlist.SelectedIndex;
            if ((selectedIndex != -1) && ((selectedIndex + 1) < this.iPathList.Count))
            {
                item = this.iPathList[selectedIndex];
                this.iPathList.RemoveAt(selectedIndex);
                this.iPathList.Add(item);
                this.ListUpdate(false, true);
                this.xMainlist.SelectedIndex = this.iPathList.Count - 1;
            }
        }
        
        private void yDown_Click(object sender, EventArgs e)
        {
            string item = null;
            int selectedIndex = this.xMainlist.SelectedIndex;
            if ((selectedIndex != -1) && ((selectedIndex + 1) < this.iPathList.Count))
            {
                item = this.iPathList[selectedIndex];
                this.iPathList.RemoveAt(selectedIndex);
                this.iPathList.Insert(selectedIndex + 1, item);
                this.ListUpdate(false, true);
                this.xMainlist.SelectedIndex = selectedIndex + 1;
            }
        }
        
        private void yLaunch_Click(object sender, EventArgs e)
        {
            int selectedIndex = this.xMainlist.SelectedIndex;
            if (selectedIndex != -1)
            {
                this.LaunchItem(selectedIndex);
            }
            else
            {
                MessageBox.Show("Please select an item first...", "Error", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
        }
        
        private void yRefresh_Click(object sender, EventArgs e)
        {
            this.ListUpdate(true, false);
            this.xMainlist.SelectedIndex = -1;
        }
        
        private void yTop_Click(object sender, EventArgs e)
        {
            string item = null;
            int selectedIndex = this.xMainlist.SelectedIndex;
            if (selectedIndex > 0)
            {
                item = this.iPathList[selectedIndex];
                this.iPathList.RemoveAt(selectedIndex);
                this.iPathList.Insert(0, item);
                this.ListUpdate(false, true);
                this.xMainlist.SelectedIndex = 0;
            }
        }
        
        private void yUp_Click(object sender, EventArgs e)
        {
            string item = null;
            int selectedIndex = this.xMainlist.SelectedIndex;
            if (selectedIndex > 0)
            {
                item = this.iPathList[selectedIndex];
                this.iPathList.RemoveAt(selectedIndex);
                this.iPathList.Insert(selectedIndex - 1, item);
                this.ListUpdate(false, true);
                this.xMainlist.SelectedIndex = selectedIndex - 1;
            }
        }
        
        private void zLink_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("http://fb.me/LilyflowerAngel");
        }
    }
}
